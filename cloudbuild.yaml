steps:
  # Build and push backend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/gps-backend', './backend']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/gps-backend']

  # Build and push frontend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/gps-frontend', './frontend']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/gps-frontend']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'gps-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/gps-backend'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3002'
      - '--set-env-vars'
      - 'DATABASE_URL=postgresql://gp:Megumi12@/gps_trucks_japan?host=/cloudsql/YOUR_INSTANCE_CONNECTION_NAME'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'gps-frontend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/gps-frontend'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'
      - '--set-env-vars'
      - 'NEXT_PUBLIC_API_URL=https://gps-backend-xxxxx-uc.a.run.app'

images:
  - 'gcr.io/$PROJECT_ID/gps-backend'
  - 'gcr.io/$PROJECT_ID/gps-frontend'